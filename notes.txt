# CONSUMO API CON JAVASCRIPT

## QUE ES UNA API (Aplication programing interface)
-- Interfaz es una forma de interactuar con un programa
-- las API son interfaces de interaccion entre aplicaciones
-- REST => representational state transfer
-- API Rest => interfaces de comunicacion por medio de HTTP 

## FLUJO E COMUNICACION FRONTEND - BACKEND
-- El usuario interactua 
-- El front envia peticion al back 
-- El back responde con un HTML, XML o JSON
-- El front renderiza 

## ENDPOINTS
-- Los endpoints son rutas
-- Sirven para solicitar contenidos especificos de la API 

## QUERY PARAMETERS
-- Informacion extra a los endpoints para limitar aun mas o especificar mejor la informacion solicitada

## HTTP STATUS CODE 
-- Es la forma en que el protocolo HTTP nos da un spoiler de como esta resultando la peticion 
-- van desde el 100 hasta el 500
-- 200 peticion respondida con exito
-- 300 redirect, 307 redirect temporal, 308 redirect permanente
-- 400 error del frontend, 401 ruta no autorizada 
-- El código de error HTTP 418 Soy una tetera indica que el servidor se rehusa a preparar café porque es una tetera. Este error es una referencia al Hyper Text Coffee Pot Control Protocol, creado como parte de una broma del April Fools' de 1998
-- 500 error en el backend 

## API KEY
-- Es una forma de identificar el backend quien esta realizando una solicitud 
-- Autenticacion: conciste en notificar quien es cada quien
-- Autorizacion: indica que permisos tiene cada quien 
-- Api key por lo general un query parameter 
-- Autorization por lo general va en los headers 

## METODOS HTTP 
-- Es la forma en que el frontend le da un spoiler al backend de que tipo de solicitud va a realizar 
-- GET: Es el metodo por defecto y se utilizan para solicitar y consumir informacion
-- POST: Se utiliza para crear informacion o registros
-- PUT / PATCH: Se utilizan para editar informacion antes creada, el PUT indica que vamos a editar todo la informacion del registro 
y el PATCH indica que solo se va a ediat una perte del registro
-- DELETE: Se utiliza para borrar informacion o registros 

## HEADERS 
-- Es la metainformacion que indica como se esta enviando el body
-- Tambien le indica al backend como nos va a retornar la informacion

-- Content Type 
--- Le indica al backend como se van a comunicar
--- Que tipo de informacion le estamos enviando 
--- Como me va a enviar la informacion de respuesta 
--- aplication/json - aplication/xml - aplication/zip - aplication/x-www-form-urlencoded 
--- audio/mpeg - audio/x-ms-wma - audio/vnd.rn-realaudio - audio/x-wav
--- image/gif - image/jpeg - image/png - image/x-icon - image/svg+xml 
--- multipart/mixed - multipart/alternative - multipart/related - multipart/form-data 
--- video/mpeg - video/mp4 - video/quicktime - video/webm 
--- application/vnd.ms-excel - application/vnd.ms-powerpoint - application/msword
--- text/css - text/csv - text/html - text/plain - text/xml 

-- Authorization 
-- Cookies 
-- Location 
-- Etc.

### AUTHORIZATION HEADER 
-- X-API-Key = abc123

## BODY 
-- Es la informacion que va a leer el backend 

## HTTP CLIENTS
-- Axios: Cliente HTTP basado en promesas.
-- Trae.js 
-- node-fetch (Node) 
-- request (Node)
